# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Makefile for ABINIT                                      -*- Automake -*-
# Generated by make-makefiles-corelibs on 2023/01/17 15:02:45 +0000

#
# IMPORTANT NOTE
#
# Any manual change to this file will systematically be overwritten.
# Please modify the make-makefiles-corelibs script or its config file instead.
#

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/78_effpot
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/m4/arch-gpu.m4 \
	$(top_srcdir)/config/m4/arch-mpi.m4 \
	$(top_srcdir)/config/m4/auto-autotools.m4 \
	$(top_srcdir)/config/m4/auto-corelibs.m4 \
	$(top_srcdir)/config/m4/auto-debug.m4 \
	$(top_srcdir)/config/m4/auto-dirflags.m4 \
	$(top_srcdir)/config/m4/auto-env.m4 \
	$(top_srcdir)/config/m4/auto-hints.m4 \
	$(top_srcdir)/config/m4/auto-optim.m4 \
	$(top_srcdir)/config/m4/auto-options.m4 \
	$(top_srcdir)/config/m4/auto-output.m4 \
	$(top_srcdir)/config/m4/auto-triggers.m4 \
	$(top_srcdir)/config/m4/conf-atompaw.m4 \
	$(top_srcdir)/config/m4/conf-debug.m4 \
	$(top_srcdir)/config/m4/conf-fallbacks.m4 \
	$(top_srcdir)/config/m4/conf-files.m4 \
	$(top_srcdir)/config/m4/conf-init.m4 \
	$(top_srcdir)/config/m4/conf-openmp.m4 \
	$(top_srcdir)/config/m4/conf-optim.m4 \
	$(top_srcdir)/config/m4/lang-c++.m4 \
	$(top_srcdir)/config/m4/lang-c.m4 \
	$(top_srcdir)/config/m4/lang-fortran-import.m4 \
	$(top_srcdir)/config/m4/lang-fortran.m4 \
	$(top_srcdir)/config/m4/lang-python.m4 \
	$(top_srcdir)/config/m4/libxml2.m4 \
	$(top_srcdir)/config/m4/misc-display.m4 \
	$(top_srcdir)/config/m4/sd_abinit_common.m4 \
	$(top_srcdir)/config/m4/sd_arch_gpu.m4 \
	$(top_srcdir)/config/m4/sd_arch_mpi.m4 \
	$(top_srcdir)/config/m4/sd_bigdft.m4 \
	$(top_srcdir)/config/m4/sd_core.m4 \
	$(top_srcdir)/config/m4/sd_esl.m4 \
	$(top_srcdir)/config/m4/sd_fftw3.m4 \
	$(top_srcdir)/config/m4/sd_io_hdf5.m4 \
	$(top_srcdir)/config/m4/sd_io_netcdf.m4 \
	$(top_srcdir)/config/m4/sd_io_netcdf_fortran.m4 \
	$(top_srcdir)/config/m4/sd_levmar.m4 \
	$(top_srcdir)/config/m4/sd_libpaw.m4 \
	$(top_srcdir)/config/m4/sd_libpsml.m4 \
	$(top_srcdir)/config/m4/sd_libxc.m4 \
	$(top_srcdir)/config/m4/sd_math_fft.m4 \
	$(top_srcdir)/config/m4/sd_math_linalg.m4 \
	$(top_srcdir)/config/m4/sd_math_linalg_core.m4 \
	$(top_srcdir)/config/m4/sd_math_linalg_util.m4 \
	$(top_srcdir)/config/m4/sd_papi.m4 \
	$(top_srcdir)/config/m4/sd_pfft.m4 \
	$(top_srcdir)/config/m4/sd_triqs.m4 \
	$(top_srcdir)/config/m4/sd_wannier90.m4 \
	$(top_srcdir)/config/m4/sd_xmlf90.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
lib78_effpot_a_AR = $(AR) $(ARFLAGS)
lib78_effpot_a_LIBADD =
am__objects_1 = m_compute_anharmonics.$(OBJEXT) effpot_xml.$(OBJEXT) \
	m_generate_training_set.$(OBJEXT) m_init10.$(OBJEXT) \
	m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) \
	m_anharmonics_terms.$(OBJEXT) m_dynarray.$(OBJEXT) \
	m_effective_potential.$(OBJEXT) \
	m_effective_potential_file.$(OBJEXT) m_effpot_mpi.$(OBJEXT) \
	m_fit_data.$(OBJEXT) m_fit_polynomial_coeff.$(OBJEXT) \
	m_harmonics_terms.$(OBJEXT) m_hashtable_strval.$(OBJEXT) \
	m_lattice_berendsen_NPT_mover.$(OBJEXT) \
	m_lattice_berendsen_NVT_mover.$(OBJEXT) \
	m_lattice_dummy_mover.$(OBJEXT) m_lattice_effpot.$(OBJEXT) \
	m_lattice_harmonic_potential.$(OBJEXT) \
	m_lattice_io_netcdf.$(OBJEXT) \
	m_lattice_langevin_mover.$(OBJEXT) m_lattice_lwf_map.$(OBJEXT) \
	m_lattice_lwf_mover.$(OBJEXT) m_lattice_mover.$(OBJEXT) \
	m_lattice_ncfile.$(OBJEXT) m_lattice_verlet_mover.$(OBJEXT) \
	m_linked_list.$(OBJEXT) m_lwf_berendsen_mover.$(OBJEXT) \
	m_lwf_dummy_mover.$(OBJEXT) m_lwf_hist.$(OBJEXT) \
	m_lwf_mc_mover.$(OBJEXT) m_lwf_mover.$(OBJEXT) \
	m_lwf_ncfile.$(OBJEXT) m_lwf_observables.$(OBJEXT) \
	m_lwf_primitive.$(OBJEXT) m_lwf_potential.$(OBJEXT) \
	m_mathfuncs.$(OBJEXT) m_mergesort.$(OBJEXT) \
	m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) \
	m_multibinit_dataset.$(OBJEXT) m_multibinit_io_xml.$(OBJEXT) \
	m_multibinit_main.$(OBJEXT) m_multibinit_manager.$(OBJEXT) \
	m_multibinit_unittest.$(OBJEXT) m_observables.$(OBJEXT) \
	m_opt_effpot.$(OBJEXT) m_polynomial.$(OBJEXT) \
	m_polynomial_coeff.$(OBJEXT) m_polynomial_conf.$(OBJEXT) \
	m_polynomial_potential.$(OBJEXT) m_polynomial_term.$(OBJEXT) \
	m_scup_dataset.$(OBJEXT) m_potential_list.$(OBJEXT) \
	m_primitive_potential.$(OBJEXT) \
	m_primitive_potential_list.$(OBJEXT) m_spin_hist.$(OBJEXT) \
	m_spin_mc_mover.$(OBJEXT) m_spin_mover.$(OBJEXT) \
	m_spin_ncfile.$(OBJEXT) m_spin_observables.$(OBJEXT) \
	m_spin_potential.$(OBJEXT) \
	m_spin_primitive_potential.$(OBJEXT) \
	m_spin_reciprocal.$(OBJEXT) m_slc_dynamics.$(OBJEXT) \
	m_slc_potential.$(OBJEXT) m_slc_primitive_potential.$(OBJEXT) \
	m_spmat_base.$(OBJEXT) m_spmat_convert.$(OBJEXT) \
	m_spmat_coo.$(OBJEXT) m_spmat_csr.$(OBJEXT) \
	m_spmat_dense.$(OBJEXT) m_spmat_lco.$(OBJEXT) \
	m_spmat_lil.$(OBJEXT) m_spmat_spvec.$(OBJEXT) \
	m_spmat_NDCOO.$(OBJEXT) m_supercell_maker.$(OBJEXT) \
	m_tightbinding.$(OBJEXT) m_twobody_interaction.$(OBJEXT)
am_lib78_effpot_a_OBJECTS = $(am__objects_1)
lib78_effpot_a_OBJECTS = $(am_lib78_effpot_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/gnu/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/effpot_xml.Po
am__mv = mv -f
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_@AM_V@)
am__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(lib78_effpot_a_SOURCES)
DIST_SOURCES = $(lib78_effpot_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/gnu/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABINIT_BINARY_PACKAGE = @ABINIT_BINARY_PACKAGE@
ABINIT_COMMON_CPPFLAGS = @ABINIT_COMMON_CPPFLAGS@
ABINIT_COMMON_FCFLAGS = @ABINIT_COMMON_FCFLAGS@
ABINIT_COMMON_LDFLAGS = @ABINIT_COMMON_LDFLAGS@
ABINIT_COMMON_LIBS = @ABINIT_COMMON_LIBS@
ABINIT_TARGET = @ABINIT_TARGET@
ABINIT_VERSION = @ABINIT_VERSION@
ABINIT_VERSION_BASE = @ABINIT_VERSION_BASE@
ABINIT_VERSION_BUILD = @ABINIT_VERSION_BUILD@
ABINIT_VERSION_MAJOR = @ABINIT_VERSION_MAJOR@
ABINIT_VERSION_MICRO = @ABINIT_VERSION_MICRO@
ABINIT_VERSION_MINOR = @ABINIT_VERSION_MINOR@
ABI_CPPFLAGS = @ABI_CPPFLAGS@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARFLAGS = @ARFLAGS@
ARFLAGS_CMD = @ARFLAGS_CMD@
ARFLAGS_DEBUG = @ARFLAGS_DEBUG@
ARFLAGS_EXTRA = @ARFLAGS_EXTRA@
ARFLAGS_HINTS = @ARFLAGS_HINTS@
ARFLAGS_OPTIM = @ARFLAGS_OPTIM@
ATOMPAW_BIN = @ATOMPAW_BIN@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIGDFT_CPPFLAGS = @BIGDFT_CPPFLAGS@
BIGDFT_FCFLAGS = @BIGDFT_FCFLAGS@
BIGDFT_LDFLAGS = @BIGDFT_LDFLAGS@
BIGDFT_LIBS = @BIGDFT_LIBS@
BOURNE_SHELL = @BOURNE_SHELL@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_LDFLAGS = @CC_LDFLAGS@
CC_LDFLAGS_DEBUG = @CC_LDFLAGS_DEBUG@
CC_LDFLAGS_EXTRA = @CC_LDFLAGS_EXTRA@
CC_LDFLAGS_GPU = @CC_LDFLAGS_GPU@
CC_LDFLAGS_HINTS = @CC_LDFLAGS_HINTS@
CC_LDFLAGS_OPTIM = @CC_LDFLAGS_OPTIM@
CC_LIBS = @CC_LIBS@
CC_LIBS_DEBUG = @CC_LIBS_DEBUG@
CC_LIBS_EXTRA = @CC_LIBS_EXTRA@
CC_LIBS_GPU = @CC_LIBS_GPU@
CC_LIBS_HINTS = @CC_LIBS_HINTS@
CC_LIBS_OPTIM = @CC_LIBS_OPTIM@
CFLAGS = @CFLAGS@
CFLAGS_DEBUG = @CFLAGS_DEBUG@
CFLAGS_EXTRA = @CFLAGS_EXTRA@
CFLAGS_GPU = @CFLAGS_GPU@
CFLAGS_HINTS = @CFLAGS_HINTS@
CFLAGS_OPTIM = @CFLAGS_OPTIM@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPFLAGS_DEBUG = @CPPFLAGS_DEBUG@
CPPFLAGS_EXTRA = @CPPFLAGS_EXTRA@
CPPFLAGS_GPU = @CPPFLAGS_GPU@
CPPFLAGS_HINTS = @CPPFLAGS_HINTS@
CPPFLAGS_HINTS_EXT = @CPPFLAGS_HINTS_EXT@
CPPFLAGS_OPTIM = @CPPFLAGS_OPTIM@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXFLAGS_DEBUG = @CXXFLAGS_DEBUG@
CXXFLAGS_EXTRA = @CXXFLAGS_EXTRA@
CXXFLAGS_GPU = @CXXFLAGS_GPU@
CXXFLAGS_HINTS = @CXXFLAGS_HINTS@
CXXFLAGS_OPTIM = @CXXFLAGS_OPTIM@
CXX_LDFLAGS = @CXX_LDFLAGS@
CXX_LDFLAGS_DEBUG = @CXX_LDFLAGS_DEBUG@
CXX_LDFLAGS_EXTRA = @CXX_LDFLAGS_EXTRA@
CXX_LDFLAGS_GPU = @CXX_LDFLAGS_GPU@
CXX_LDFLAGS_HINTS = @CXX_LDFLAGS_HINTS@
CXX_LDFLAGS_OPTIM = @CXX_LDFLAGS_OPTIM@
CXX_LIBS = @CXX_LIBS@
CXX_LIBS_DEBUG = @CXX_LIBS_DEBUG@
CXX_LIBS_EXTRA = @CXX_LIBS_EXTRA@
CXX_LIBS_GPU = @CXX_LIBS_GPU@
CXX_LIBS_HINTS = @CXX_LIBS_HINTS@
CXX_LIBS_OPTIM = @CXX_LIBS_OPTIM@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_DEBUG = @FCFLAGS_DEBUG@
FCFLAGS_EXTRA = @FCFLAGS_EXTRA@
FCFLAGS_F90 = @FCFLAGS_F90@
FCFLAGS_FIXEDFORM = @FCFLAGS_FIXEDFORM@
FCFLAGS_FREEFORM = @FCFLAGS_FREEFORM@
FCFLAGS_HINTS = @FCFLAGS_HINTS@
FCFLAGS_MODDIR = @FCFLAGS_MODDIR@
FCFLAGS_OPENMP = @FCFLAGS_OPENMP@
FCFLAGS_OPTIM = @FCFLAGS_OPTIM@
FCLIBS = @FCLIBS@
FC_LDFLAGS = @FC_LDFLAGS@
FC_LDFLAGS_DEBUG = @FC_LDFLAGS_DEBUG@
FC_LDFLAGS_EXTRA = @FC_LDFLAGS_EXTRA@
FC_LDFLAGS_HINTS = @FC_LDFLAGS_HINTS@
FC_LDFLAGS_OPTIM = @FC_LDFLAGS_OPTIM@
FC_LIBS = @FC_LIBS@
FC_LIBS_DEBUG = @FC_LIBS_DEBUG@
FC_LIBS_EXTRA = @FC_LIBS_EXTRA@
FC_LIBS_HINTS = @FC_LIBS_HINTS@
FC_LIBS_OPTIM = @FC_LIBS_OPTIM@
FC_NOWRAP = @FC_NOWRAP@
FFLAGS = @FFLAGS@
FFTW3_CFLAGS = @FFTW3_CFLAGS@
FFTW3_CPPFLAGS = @FFTW3_CPPFLAGS@
FFTW3_FCFLAGS = @FFTW3_FCFLAGS@
FFTW3_LDFLAGS = @FFTW3_LDFLAGS@
FFTW3_LIBS = @FFTW3_LIBS@
FFT_CFLAGS = @FFT_CFLAGS@
FFT_FCFLAGS = @FFT_FCFLAGS@
FPP = @FPP@
FPPFLAGS = @FPPFLAGS@
FPPFLAGS_DEBUG = @FPPFLAGS_DEBUG@
FPPFLAGS_EXTRA = @FPPFLAGS_EXTRA@
FPPFLAGS_HINTS = @FPPFLAGS_HINTS@
FPPFLAGS_OPTIM = @FPPFLAGS_OPTIM@
GPU_CFLAGS = @GPU_CFLAGS@
GPU_CPPFLAGS = @GPU_CPPFLAGS@
GPU_CXXFLAGS = @GPU_CXXFLAGS@
GPU_FCFLAGS = @GPU_FCFLAGS@
GPU_LDFLAGS = @GPU_LDFLAGS@
GPU_LIBS = @GPU_LIBS@
GRAPHATOM_BIN = @GRAPHATOM_BIN@
GREP = @GREP@
H5CC = @H5CC@
HDF5_CFLAGS = @HDF5_CFLAGS@
HDF5_CPPFLAGS = @HDF5_CPPFLAGS@
HDF5_CXXFLAGS = @HDF5_CXXFLAGS@
HDF5_FCFLAGS = @HDF5_FCFLAGS@
HDF5_LDFLAGS = @HDF5_LDFLAGS@
HDF5_LIBS = @HDF5_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEVMAR_CFLAGS = @LEVMAR_CFLAGS@
LEVMAR_CPPFLAGS = @LEVMAR_CPPFLAGS@
LEVMAR_LDFLAGS = @LEVMAR_LDFLAGS@
LEVMAR_LIBS = @LEVMAR_LIBS@
LIBOBJS = @LIBOBJS@
LIBPAW_CPPFLAGS = @LIBPAW_CPPFLAGS@
LIBPAW_FCFLAGS = @LIBPAW_FCFLAGS@
LIBPAW_LDFLAGS = @LIBPAW_LDFLAGS@
LIBPAW_LIBS = @LIBPAW_LIBS@
LIBPSML_CPPFLAGS = @LIBPSML_CPPFLAGS@
LIBPSML_FCFLAGS = @LIBPSML_FCFLAGS@
LIBPSML_LDFLAGS = @LIBPSML_LDFLAGS@
LIBPSML_LIBS = @LIBPSML_LIBS@
LIBS = @LIBS@
LIBXC_CFLAGS = @LIBXC_CFLAGS@
LIBXC_CPPFLAGS = @LIBXC_CPPFLAGS@
LIBXC_FCFLAGS = @LIBXC_FCFLAGS@
LIBXC_LDFLAGS = @LIBXC_LDFLAGS@
LIBXC_LIBS = @LIBXC_LIBS@
LIBXML2_CPPFLAGS = @LIBXML2_CPPFLAGS@
LIBXML2_FCFLAGS = @LIBXML2_FCFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LINALG_CFLAGS = @LINALG_CFLAGS@
LINALG_CPPFLAGS = @LINALG_CPPFLAGS@
LINALG_CXXFLAGS = @LINALG_CXXFLAGS@
LINALG_FCFLAGS = @LINALG_FCFLAGS@
LINALG_LDFLAGS = @LINALG_LDFLAGS@
LINALG_LIBS = @LINALG_LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MODEXT = @MODEXT@
MPI_CFLAGS = @MPI_CFLAGS@
MPI_CPPFLAGS = @MPI_CPPFLAGS@
MPI_CXXFLAGS = @MPI_CXXFLAGS@
MPI_FCFLAGS = @MPI_FCFLAGS@
MPI_LDFLAGS = @MPI_LDFLAGS@
MPI_LIBS = @MPI_LIBS@
MV = @MV@
NETCDF_CFLAGS = @NETCDF_CFLAGS@
NETCDF_CPPFLAGS = @NETCDF_CPPFLAGS@
NETCDF_CXXFLAGS = @NETCDF_CXXFLAGS@
NETCDF_FCFLAGS = @NETCDF_FCFLAGS@
NETCDF_FORTRAN_CFLAGS = @NETCDF_FORTRAN_CFLAGS@
NETCDF_FORTRAN_CPPFLAGS = @NETCDF_FORTRAN_CPPFLAGS@
NETCDF_FORTRAN_CXXFLAGS = @NETCDF_FORTRAN_CXXFLAGS@
NETCDF_FORTRAN_FCFLAGS = @NETCDF_FORTRAN_FCFLAGS@
NETCDF_FORTRAN_LDFLAGS = @NETCDF_FORTRAN_LDFLAGS@
NETCDF_FORTRAN_LIBS = @NETCDF_FORTRAN_LIBS@
NETCDF_LDFLAGS = @NETCDF_LDFLAGS@
NETCDF_LIBS = @NETCDF_LIBS@
NVCC = @NVCC@
NVCC_CFLAGS = @NVCC_CFLAGS@
NVCC_CPPFLAGS = @NVCC_CPPFLAGS@
NVCC_LDFLAGS = @NVCC_LDFLAGS@
NVCC_LIBS = @NVCC_LIBS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAPI_CFLAGS = @PAPI_CFLAGS@
PAPI_CPPFLAGS = @PAPI_CPPFLAGS@
PAPI_LDFLAGS = @PAPI_LDFLAGS@
PAPI_LIBS = @PAPI_LIBS@
PATCH = @PATCH@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PFFT_CFLAGS = @PFFT_CFLAGS@
PFFT_CPPFLAGS = @PFFT_CPPFLAGS@
PFFT_LDFLAGS = @PFFT_LDFLAGS@
PFFT_LIBS = @PFFT_LIBS@
PYFLAGS = @PYFLAGS@
PYTHON = @PYTHON@
PYTHON_CONFIG = @PYTHON_CONFIG@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
RANLIB = @RANLIB@
REALPATH = @REALPATH@
RM = @RM@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TAR = @TAR@
TRIQS_CFLAGS = @TRIQS_CFLAGS@
TRIQS_CPPFLAGS = @TRIQS_CPPFLAGS@
TRIQS_CXXFLAGS = @TRIQS_CXXFLAGS@
TRIQS_LDFLAGS = @TRIQS_LDFLAGS@
TRIQS_LIBS = @TRIQS_LIBS@
TRUE_CPP = @TRUE_CPP@
VERSION = @VERSION@
WANNIER90_CPPFLAGS = @WANNIER90_CPPFLAGS@
WANNIER90_FCFLAGS = @WANNIER90_FCFLAGS@
WANNIER90_LDFLAGS = @WANNIER90_LDFLAGS@
WANNIER90_LIBS = @WANNIER90_LIBS@
XML2_CONFIG = @XML2_CONFIG@
XMLF90_CPPFLAGS = @XMLF90_CPPFLAGS@
XMLF90_FCFLAGS = @XMLF90_FCFLAGS@
XMLF90_LDFLAGS = @XMLF90_LDFLAGS@
XMLF90_LIBS = @XMLF90_LIBS@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
XPP = @XPP@
XPPFLAGS = @XPPFLAGS@
XPPFLAGS_DEBUG = @XPPFLAGS_DEBUG@
XPPFLAGS_EXTRA = @XPPFLAGS_EXTRA@
XPPFLAGS_OPTIM = @XPPFLAGS_OPTIM@
abi_ac_distcheck = @abi_ac_distcheck@
abi_ac_version = @abi_ac_version@
abi_am_version = @abi_am_version@
abi_avx_safe_mode_enable = @abi_avx_safe_mode_enable@
abi_bse_unpacked_enable = @abi_bse_unpacked_enable@
abi_cc_path = @abi_cc_path@
abi_cc_vendor = @abi_cc_vendor@
abi_cc_version = @abi_cc_version@
abi_cclock_enable = @abi_cclock_enable@
abi_cpp_path = @abi_cpp_path@
abi_cpu_64bits = @abi_cpu_64bits@
abi_cpu_bits = @abi_cpu_bits@
abi_cpu_model = @abi_cpu_model@
abi_cpu_platform = @abi_cpu_platform@
abi_cpu_spec = @abi_cpu_spec@
abi_cpu_vendor = @abi_cpu_vendor@
abi_crpa_optim_enable = @abi_crpa_optim_enable@
abi_cxx_path = @abi_cxx_path@
abi_cxx_vendor = @abi_cxx_vendor@
abi_cxx_version = @abi_cxx_version@
abi_debug_flavor = @abi_debug_flavor@
abi_exports_enable = @abi_exports_enable@
abi_fbk_abinit_common_ok = @abi_fbk_abinit_common_ok@
abi_fbk_bigdft_ok = @abi_fbk_bigdft_ok@
abi_fbk_config = @abi_fbk_config@
abi_fbk_enable = @abi_fbk_enable@
abi_fbk_fft_ok = @abi_fbk_fft_ok@
abi_fbk_fftw3_ok = @abi_fbk_fftw3_ok@
abi_fbk_gpu_ok = @abi_fbk_gpu_ok@
abi_fbk_hdf5_ok = @abi_fbk_hdf5_ok@
abi_fbk_init = @abi_fbk_init@
abi_fbk_levmar_ok = @abi_fbk_levmar_ok@
abi_fbk_libpaw_ok = @abi_fbk_libpaw_ok@
abi_fbk_libpsml_ok = @abi_fbk_libpsml_ok@
abi_fbk_libxc_ok = @abi_fbk_libxc_ok@
abi_fbk_libxml2_ok = @abi_fbk_libxml2_ok@
abi_fbk_linalg_ok = @abi_fbk_linalg_ok@
abi_fbk_list = @abi_fbk_list@
abi_fbk_mpi_ok = @abi_fbk_mpi_ok@
abi_fbk_netcdf_fortran_ok = @abi_fbk_netcdf_fortran_ok@
abi_fbk_netcdf_ok = @abi_fbk_netcdf_ok@
abi_fbk_papi_ok = @abi_fbk_papi_ok@
abi_fbk_pfft_ok = @abi_fbk_pfft_ok@
abi_fbk_prefix = @abi_fbk_prefix@
abi_fbk_required = @abi_fbk_required@
abi_fbk_triqs_ok = @abi_fbk_triqs_ok@
abi_fbk_wannier90_ok = @abi_fbk_wannier90_ok@
abi_fbk_xmlf90_ok = @abi_fbk_xmlf90_ok@
abi_fc_path = @abi_fc_path@
abi_fc_vendor = @abi_fc_vendor@
abi_fc_version = @abi_fc_version@
abi_fc_wrap = @abi_fc_wrap@
abi_fc_wrapper_enable = @abi_fc_wrapper_enable@
abi_fpp_path = @abi_fpp_path@
abi_gpu_fcflags = @abi_gpu_fcflags@
abi_gpu_flavor = @abi_gpu_flavor@
abi_gpu_incs = @abi_gpu_incs@
abi_gpu_ldflags = @abi_gpu_ldflags@
abi_gpu_libs = @abi_gpu_libs@
abi_gpu_nvtx_v3 = @abi_gpu_nvtx_v3@
abi_gw_dpc_enable = @abi_gw_dpc_enable@
abi_hints_enable = @abi_hints_enable@
abi_libtetra_enable = @abi_libtetra_enable@
abi_libxml2_cppflags = @abi_libxml2_cppflags@
abi_libxml2_enable = @abi_libxml2_enable@
abi_libxml2_fcflags = @abi_libxml2_fcflags@
abi_libxml2_init = @abi_libxml2_init@
abi_libxml2_ldflags = @abi_libxml2_ldflags@
abi_libxml2_libs = @abi_libxml2_libs@
abi_libxml2_ok = @abi_libxml2_ok@
abi_libxml2_prefix = @abi_libxml2_prefix@
abi_lotf_enable = @abi_lotf_enable@
abi_lt_version = @abi_lt_version@
abi_m4_version = @abi_m4_version@
abi_memory_profiling_enable = @abi_memory_profiling_enable@
abi_mpi_cflags = @abi_mpi_cflags@
abi_mpi_cppflags = @abi_mpi_cppflags@
abi_mpi_cxxflags = @abi_mpi_cxxflags@
abi_mpi_enable = @abi_mpi_enable@
abi_mpi_fcflags = @abi_mpi_fcflags@
abi_mpi_flavor = @abi_mpi_flavor@
abi_mpi_incs = @abi_mpi_incs@
abi_mpi_inplace_enable = @abi_mpi_inplace_enable@
abi_mpi_io_default_enable = @abi_mpi_io_default_enable@
abi_mpi_io_enable = @abi_mpi_io_enable@
abi_mpi_ldflags = @abi_mpi_ldflags@
abi_mpi_level = @abi_mpi_level@
abi_mpi_libs = @abi_mpi_libs@
abi_netcdf_default_enable = @abi_netcdf_default_enable@
abi_openmp_enable = @abi_openmp_enable@
abi_optim_flavor = @abi_optim_flavor@
abi_python_invocation_enable = @abi_python_invocation_enable@
abi_source_debug_enable = @abi_source_debug_enable@
abi_stdin_enable = @abi_stdin_enable@
abi_sys_spec = @abi_sys_spec@
abi_timer_enable = @abi_timer_enable@
abi_triqs_v1_4_enable = @abi_triqs_v1_4_enable@
abi_triqs_v2_0_enable = @abi_triqs_v2_0_enable@
abi_zdot_bugfix_enable = @abi_zdot_bugfix_enable@
abinit_bindir = @abinit_bindir@
abinit_builddir = @abinit_builddir@
abinit_chkdir = @abinit_chkdir@
abinit_datdir = @abinit_datdir@
abinit_docdir = @abinit_docdir@
abinit_incdir = @abinit_incdir@
abinit_libdir = @abinit_libdir@
abinit_mandir = @abinit_mandir@
abinit_prefix = @abinit_prefix@
abinit_srcdir = @abinit_srcdir@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cc_info_string = @cc_info_string@
cxx_info_string = @cxx_info_string@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_avx_safe_mode = @enable_avx_safe_mode@
enable_bse_unpacked = @enable_bse_unpacked@
enable_cclock = @enable_cclock@
enable_crpa_optim = @enable_crpa_optim@
enable_exports = @enable_exports@
enable_fc_wrapper = @enable_fc_wrapper@
enable_gw_dpc = @enable_gw_dpc@
enable_hints = @enable_hints@
enable_libtetra = @enable_libtetra@
enable_lotf = @enable_lotf@
enable_memory_profiling = @enable_memory_profiling@
enable_mpi_inplace = @enable_mpi_inplace@
enable_mpi_io = @enable_mpi_io@
enable_mpi_io_default = @enable_mpi_io_default@
enable_netcdf_default = @enable_netcdf_default@
enable_openmp = @enable_openmp@
enable_python_invocation = @enable_python_invocation@
enable_shared = @enable_shared@
enable_source_debug = @enable_source_debug@
enable_static = @enable_static@
enable_stdin = @enable_stdin@
enable_timer = @enable_timer@
enable_triqs_v1_4 = @enable_triqs_v1_4@
enable_triqs_v2_0 = @enable_triqs_v2_0@
enable_zdot_bugfix = @enable_zdot_bugfix@
exec_prefix = @exec_prefix@
fc_info_string = @fc_info_string@
fc_mod_fcflags = @fc_mod_fcflags@
fc_timing = @fc_timing@
fcflags_opt_02_clib = @fcflags_opt_02_clib@
fcflags_opt_10_defs = @fcflags_opt_10_defs@
fcflags_opt_11_memory_mpi = @fcflags_opt_11_memory_mpi@
fcflags_opt_12_hide_mpi = @fcflags_opt_12_hide_mpi@
fcflags_opt_14_hidewrite = @fcflags_opt_14_hidewrite@
fcflags_opt_16_hideleave = @fcflags_opt_16_hideleave@
fcflags_opt_17_gpu_toolbox = @fcflags_opt_17_gpu_toolbox@
fcflags_opt_17_libtetra_ext = @fcflags_opt_17_libtetra_ext@
fcflags_opt_17_yaml_out = @fcflags_opt_17_yaml_out@
fcflags_opt_18_timing = @fcflags_opt_18_timing@
fcflags_opt_21_hashfuncs = @fcflags_opt_21_hashfuncs@
fcflags_opt_27_toolbox_oop = @fcflags_opt_27_toolbox_oop@
fcflags_opt_28_numeric_noabirule = @fcflags_opt_28_numeric_noabirule@
fcflags_opt_29_kpoints = @fcflags_opt_29_kpoints@
fcflags_opt_32_util = @fcflags_opt_32_util@
fcflags_opt_33_xc_lowlevel = @fcflags_opt_33_xc_lowlevel@
fcflags_opt_39_libpaw = @fcflags_opt_39_libpaw@
fcflags_opt_41_geometry = @fcflags_opt_41_geometry@
fcflags_opt_42_nlstrain = @fcflags_opt_42_nlstrain@
fcflags_opt_42_parser = @fcflags_opt_42_parser@
fcflags_opt_43_ptgroups = @fcflags_opt_43_ptgroups@
fcflags_opt_43_wvl_wrappers = @fcflags_opt_43_wvl_wrappers@
fcflags_opt_44_abitools = @fcflags_opt_44_abitools@
fcflags_opt_44_abitypes_defs = @fcflags_opt_44_abitypes_defs@
fcflags_opt_45_geomoptim = @fcflags_opt_45_geomoptim@
fcflags_opt_45_xgTools = @fcflags_opt_45_xgTools@
fcflags_opt_46_manage_cuda = @fcflags_opt_46_manage_cuda@
fcflags_opt_48_diago = @fcflags_opt_48_diago@
fcflags_opt_49_gw_toolbox_oop = @fcflags_opt_49_gw_toolbox_oop@
fcflags_opt_51_manage_mpi = @fcflags_opt_51_manage_mpi@
fcflags_opt_52_fft_mpi_noabirule = @fcflags_opt_52_fft_mpi_noabirule@
fcflags_opt_53_ffts = @fcflags_opt_53_ffts@
fcflags_opt_54_spacepar = @fcflags_opt_54_spacepar@
fcflags_opt_55_abiutil = @fcflags_opt_55_abiutil@
fcflags_opt_56_io_mpi = @fcflags_opt_56_io_mpi@
fcflags_opt_56_mixing = @fcflags_opt_56_mixing@
fcflags_opt_56_recipspace = @fcflags_opt_56_recipspace@
fcflags_opt_56_xc = @fcflags_opt_56_xc@
fcflags_opt_57_iopsp_parser = @fcflags_opt_57_iopsp_parser@
fcflags_opt_57_iovars = @fcflags_opt_57_iovars@
fcflags_opt_61_occeig = @fcflags_opt_61_occeig@
fcflags_opt_62_cg_noabirule = @fcflags_opt_62_cg_noabirule@
fcflags_opt_62_ctqmc = @fcflags_opt_62_ctqmc@
fcflags_opt_62_iowfdenpot = @fcflags_opt_62_iowfdenpot@
fcflags_opt_62_poisson = @fcflags_opt_62_poisson@
fcflags_opt_62_wvl_wfs = @fcflags_opt_62_wvl_wfs@
fcflags_opt_64_psp = @fcflags_opt_64_psp@
fcflags_opt_65_lotf_base = @fcflags_opt_65_lotf_base@
fcflags_opt_65_paw = @fcflags_opt_65_paw@
fcflags_opt_66_nonlocal = @fcflags_opt_66_nonlocal@
fcflags_opt_66_vdwxc = @fcflags_opt_66_vdwxc@
fcflags_opt_66_wfs = @fcflags_opt_66_wfs@
fcflags_opt_67_common = @fcflags_opt_67_common@
fcflags_opt_67_python_invocation_ext = @fcflags_opt_67_python_invocation_ext@
fcflags_opt_67_triqs_ext = @fcflags_opt_67_triqs_ext@
fcflags_opt_68_dmft = @fcflags_opt_68_dmft@
fcflags_opt_68_lotf = @fcflags_opt_68_lotf@
fcflags_opt_68_recursion = @fcflags_opt_68_recursion@
fcflags_opt_68_rsprc = @fcflags_opt_68_rsprc@
fcflags_opt_69_wfdesc = @fcflags_opt_69_wfdesc@
fcflags_opt_70_gw = @fcflags_opt_70_gw@
fcflags_opt_71_bse = @fcflags_opt_71_bse@
fcflags_opt_71_wannier = @fcflags_opt_71_wannier@
fcflags_opt_72_response = @fcflags_opt_72_response@
fcflags_opt_77_ddb = @fcflags_opt_77_ddb@
fcflags_opt_77_suscep = @fcflags_opt_77_suscep@
fcflags_opt_78_effpot = @fcflags_opt_78_effpot@
fcflags_opt_78_eph = @fcflags_opt_78_eph@
fcflags_opt_79_seqpar_mpi = @fcflags_opt_79_seqpar_mpi@
fcflags_opt_80_rttddft = @fcflags_opt_80_rttddft@
fcflags_opt_80_tdep = @fcflags_opt_80_tdep@
fcflags_opt_94_scfcv = @fcflags_opt_94_scfcv@
fcflags_opt_95_drive = @fcflags_opt_95_drive@
fcflags_opt_98_main = @fcflags_opt_98_main@
fcflags_opt_bigdft = @fcflags_opt_bigdft@
fcflags_opt_default = @fcflags_opt_default@
fcflags_opt_hdf5 = @fcflags_opt_hdf5@
fcflags_opt_levmar = @fcflags_opt_levmar@
fcflags_opt_libpsml = @fcflags_opt_libpsml@
fcflags_opt_libxc = @fcflags_opt_libxc@
fcflags_opt_libxml2 = @fcflags_opt_libxml2@
fcflags_opt_linalg = @fcflags_opt_linalg@
fcflags_opt_netcdf = @fcflags_opt_netcdf@
fcflags_opt_netcdf_fortran = @fcflags_opt_netcdf_fortran@
fcflags_opt_papi = @fcflags_opt_papi@
fcflags_opt_triqs = @fcflags_opt_triqs@
fcflags_opt_wannier90 = @fcflags_opt_wannier90@
fcflags_opt_xmlf90 = @fcflags_opt_xmlf90@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sd_abinit_common_cppflags = @sd_abinit_common_cppflags@
sd_abinit_common_enable = @sd_abinit_common_enable@
sd_abinit_common_enable_def = @sd_abinit_common_enable_def@
sd_abinit_common_fcflags = @sd_abinit_common_fcflags@
sd_abinit_common_init = @sd_abinit_common_init@
sd_abinit_common_ldflags = @sd_abinit_common_ldflags@
sd_abinit_common_libs = @sd_abinit_common_libs@
sd_abinit_common_ok = @sd_abinit_common_ok@
sd_abinit_common_options = @sd_abinit_common_options@
sd_abinit_common_policy = @sd_abinit_common_policy@
sd_abinit_common_status = @sd_abinit_common_status@
sd_bigdft_cppflags = @sd_bigdft_cppflags@
sd_bigdft_enable = @sd_bigdft_enable@
sd_bigdft_enable_def = @sd_bigdft_enable_def@
sd_bigdft_fcflags = @sd_bigdft_fcflags@
sd_bigdft_init = @sd_bigdft_init@
sd_bigdft_ldflags = @sd_bigdft_ldflags@
sd_bigdft_libs = @sd_bigdft_libs@
sd_bigdft_ok = @sd_bigdft_ok@
sd_bigdft_options = @sd_bigdft_options@
sd_bigdft_policy = @sd_bigdft_policy@
sd_bigdft_status = @sd_bigdft_status@
sd_fft_cflags = @sd_fft_cflags@
sd_fft_choices = @sd_fft_choices@
sd_fft_cppflags = @sd_fft_cppflags@
sd_fft_cxxflags = @sd_fft_cxxflags@
sd_fft_enable = @sd_fft_enable@
sd_fft_fcflags = @sd_fft_fcflags@
sd_fft_flavor = @sd_fft_flavor@
sd_fft_init = @sd_fft_init@
sd_fft_ldflags = @sd_fft_ldflags@
sd_fft_libs = @sd_fft_libs@
sd_fft_ok = @sd_fft_ok@
sd_fftw3_cflags = @sd_fftw3_cflags@
sd_fftw3_cppflags = @sd_fftw3_cppflags@
sd_fftw3_enable = @sd_fftw3_enable@
sd_fftw3_enable_def = @sd_fftw3_enable_def@
sd_fftw3_fcflags = @sd_fftw3_fcflags@
sd_fftw3_init = @sd_fftw3_init@
sd_fftw3_ldflags = @sd_fftw3_ldflags@
sd_fftw3_libs = @sd_fftw3_libs@
sd_fftw3_ok = @sd_fftw3_ok@
sd_fftw3_options = @sd_fftw3_options@
sd_fftw3_policy = @sd_fftw3_policy@
sd_fftw3_status = @sd_fftw3_status@
sd_gpu_cflags = @sd_gpu_cflags@
sd_gpu_cppflags = @sd_gpu_cppflags@
sd_gpu_cxxflags = @sd_gpu_cxxflags@
sd_gpu_enable = @sd_gpu_enable@
sd_gpu_enable_def = @sd_gpu_enable_def@
sd_gpu_fcflags = @sd_gpu_fcflags@
sd_gpu_init = @sd_gpu_init@
sd_gpu_ldflags = @sd_gpu_ldflags@
sd_gpu_libs = @sd_gpu_libs@
sd_gpu_ok = @sd_gpu_ok@
sd_gpu_options = @sd_gpu_options@
sd_gpu_policy = @sd_gpu_policy@
sd_gpu_status = @sd_gpu_status@
sd_hdf5_cflags = @sd_hdf5_cflags@
sd_hdf5_cppflags = @sd_hdf5_cppflags@
sd_hdf5_cxxflags = @sd_hdf5_cxxflags@
sd_hdf5_enable = @sd_hdf5_enable@
sd_hdf5_enable_def = @sd_hdf5_enable_def@
sd_hdf5_enable_fc = @sd_hdf5_enable_fc@
sd_hdf5_fcflags = @sd_hdf5_fcflags@
sd_hdf5_h5cc = @sd_hdf5_h5cc@
sd_hdf5_h5fc = @sd_hdf5_h5fc@
sd_hdf5_init = @sd_hdf5_init@
sd_hdf5_ldflags = @sd_hdf5_ldflags@
sd_hdf5_libs = @sd_hdf5_libs@
sd_hdf5_ok = @sd_hdf5_ok@
sd_hdf5_options = @sd_hdf5_options@
sd_hdf5_policy = @sd_hdf5_policy@
sd_hdf5_status = @sd_hdf5_status@
sd_levmar_cflags = @sd_levmar_cflags@
sd_levmar_cppflags = @sd_levmar_cppflags@
sd_levmar_enable = @sd_levmar_enable@
sd_levmar_enable_def = @sd_levmar_enable_def@
sd_levmar_init = @sd_levmar_init@
sd_levmar_ldflags = @sd_levmar_ldflags@
sd_levmar_libs = @sd_levmar_libs@
sd_levmar_ok = @sd_levmar_ok@
sd_levmar_options = @sd_levmar_options@
sd_levmar_policy = @sd_levmar_policy@
sd_levmar_status = @sd_levmar_status@
sd_libpaw_cppflags = @sd_libpaw_cppflags@
sd_libpaw_enable = @sd_libpaw_enable@
sd_libpaw_enable_def = @sd_libpaw_enable_def@
sd_libpaw_fcflags = @sd_libpaw_fcflags@
sd_libpaw_init = @sd_libpaw_init@
sd_libpaw_ldflags = @sd_libpaw_ldflags@
sd_libpaw_libs = @sd_libpaw_libs@
sd_libpaw_ok = @sd_libpaw_ok@
sd_libpaw_options = @sd_libpaw_options@
sd_libpaw_policy = @sd_libpaw_policy@
sd_libpaw_status = @sd_libpaw_status@
sd_libpsml_cppflags = @sd_libpsml_cppflags@
sd_libpsml_enable = @sd_libpsml_enable@
sd_libpsml_enable_def = @sd_libpsml_enable_def@
sd_libpsml_fcflags = @sd_libpsml_fcflags@
sd_libpsml_init = @sd_libpsml_init@
sd_libpsml_ldflags = @sd_libpsml_ldflags@
sd_libpsml_libs = @sd_libpsml_libs@
sd_libpsml_ok = @sd_libpsml_ok@
sd_libpsml_options = @sd_libpsml_options@
sd_libpsml_policy = @sd_libpsml_policy@
sd_libpsml_status = @sd_libpsml_status@
sd_libxc_cflags = @sd_libxc_cflags@
sd_libxc_cppflags = @sd_libxc_cppflags@
sd_libxc_enable = @sd_libxc_enable@
sd_libxc_enable_def = @sd_libxc_enable_def@
sd_libxc_enable_fc = @sd_libxc_enable_fc@
sd_libxc_fcflags = @sd_libxc_fcflags@
sd_libxc_init = @sd_libxc_init@
sd_libxc_ldflags = @sd_libxc_ldflags@
sd_libxc_libs = @sd_libxc_libs@
sd_libxc_ok = @sd_libxc_ok@
sd_libxc_options = @sd_libxc_options@
sd_libxc_policy = @sd_libxc_policy@
sd_libxc_status = @sd_libxc_status@
sd_linalg_cflags = @sd_linalg_cflags@
sd_linalg_choices = @sd_linalg_choices@
sd_linalg_cppflags = @sd_linalg_cppflags@
sd_linalg_cxxflags = @sd_linalg_cxxflags@
sd_linalg_enable = @sd_linalg_enable@
sd_linalg_fcflags = @sd_linalg_fcflags@
sd_linalg_flavor = @sd_linalg_flavor@
sd_linalg_has_elpa = @sd_linalg_has_elpa@
sd_linalg_has_scalapack = @sd_linalg_has_scalapack@
sd_linalg_init = @sd_linalg_init@
sd_linalg_ldflags = @sd_linalg_ldflags@
sd_linalg_libs = @sd_linalg_libs@
sd_linalg_ok = @sd_linalg_ok@
sd_mpi_cc = @sd_mpi_cc@
sd_mpi_cflags = @sd_mpi_cflags@
sd_mpi_cppflags = @sd_mpi_cppflags@
sd_mpi_cxx = @sd_mpi_cxx@
sd_mpi_enable = @sd_mpi_enable@
sd_mpi_enable_cxx = @sd_mpi_enable_cxx@
sd_mpi_enable_def = @sd_mpi_enable_def@
sd_mpi_enable_fc = @sd_mpi_enable_fc@
sd_mpi_fc = @sd_mpi_fc@
sd_mpi_fcflags = @sd_mpi_fcflags@
sd_mpi_init = @sd_mpi_init@
sd_mpi_ldflags = @sd_mpi_ldflags@
sd_mpi_libs = @sd_mpi_libs@
sd_mpi_ok = @sd_mpi_ok@
sd_mpi_options = @sd_mpi_options@
sd_mpi_policy = @sd_mpi_policy@
sd_mpi_status = @sd_mpi_status@
sd_netcdf_cflags = @sd_netcdf_cflags@
sd_netcdf_cppflags = @sd_netcdf_cppflags@
sd_netcdf_enable = @sd_netcdf_enable@
sd_netcdf_enable_def = @sd_netcdf_enable_def@
sd_netcdf_fcflags = @sd_netcdf_fcflags@
sd_netcdf_fortran_cflags = @sd_netcdf_fortran_cflags@
sd_netcdf_fortran_cppflags = @sd_netcdf_fortran_cppflags@
sd_netcdf_fortran_enable = @sd_netcdf_fortran_enable@
sd_netcdf_fortran_enable_def = @sd_netcdf_fortran_enable_def@
sd_netcdf_fortran_fcflags = @sd_netcdf_fortran_fcflags@
sd_netcdf_fortran_init = @sd_netcdf_fortran_init@
sd_netcdf_fortran_ldflags = @sd_netcdf_fortran_ldflags@
sd_netcdf_fortran_libs = @sd_netcdf_fortran_libs@
sd_netcdf_fortran_ok = @sd_netcdf_fortran_ok@
sd_netcdf_fortran_options = @sd_netcdf_fortran_options@
sd_netcdf_fortran_policy = @sd_netcdf_fortran_policy@
sd_netcdf_fortran_status = @sd_netcdf_fortran_status@
sd_netcdf_init = @sd_netcdf_init@
sd_netcdf_ldflags = @sd_netcdf_ldflags@
sd_netcdf_libs = @sd_netcdf_libs@
sd_netcdf_ok = @sd_netcdf_ok@
sd_netcdf_options = @sd_netcdf_options@
sd_netcdf_policy = @sd_netcdf_policy@
sd_netcdf_status = @sd_netcdf_status@
sd_papi_cflags = @sd_papi_cflags@
sd_papi_cppflags = @sd_papi_cppflags@
sd_papi_enable = @sd_papi_enable@
sd_papi_enable_def = @sd_papi_enable_def@
sd_papi_init = @sd_papi_init@
sd_papi_ldflags = @sd_papi_ldflags@
sd_papi_libs = @sd_papi_libs@
sd_papi_ok = @sd_papi_ok@
sd_papi_options = @sd_papi_options@
sd_papi_policy = @sd_papi_policy@
sd_papi_sd_papi_fcflags = @sd_papi_sd_papi_fcflags@
sd_papi_status = @sd_papi_status@
sd_pfft_cflags = @sd_pfft_cflags@
sd_pfft_cppflags = @sd_pfft_cppflags@
sd_pfft_enable = @sd_pfft_enable@
sd_pfft_enable_def = @sd_pfft_enable_def@
sd_pfft_init = @sd_pfft_init@
sd_pfft_ldflags = @sd_pfft_ldflags@
sd_pfft_libs = @sd_pfft_libs@
sd_pfft_ok = @sd_pfft_ok@
sd_pfft_options = @sd_pfft_options@
sd_pfft_policy = @sd_pfft_policy@
sd_pfft_status = @sd_pfft_status@
sd_sys_fcflags = @sd_sys_fcflags@
sd_triqs_cflags = @sd_triqs_cflags@
sd_triqs_cppflags = @sd_triqs_cppflags@
sd_triqs_cxxflags = @sd_triqs_cxxflags@
sd_triqs_enable = @sd_triqs_enable@
sd_triqs_enable_def = @sd_triqs_enable_def@
sd_triqs_fcflags = @sd_triqs_fcflags@
sd_triqs_init = @sd_triqs_init@
sd_triqs_ldflags = @sd_triqs_ldflags@
sd_triqs_libs = @sd_triqs_libs@
sd_triqs_ok = @sd_triqs_ok@
sd_triqs_options = @sd_triqs_options@
sd_triqs_policy = @sd_triqs_policy@
sd_triqs_status = @sd_triqs_status@
sd_wannier90_cppflags = @sd_wannier90_cppflags@
sd_wannier90_enable = @sd_wannier90_enable@
sd_wannier90_enable_def = @sd_wannier90_enable_def@
sd_wannier90_fcflags = @sd_wannier90_fcflags@
sd_wannier90_init = @sd_wannier90_init@
sd_wannier90_ldflags = @sd_wannier90_ldflags@
sd_wannier90_libs = @sd_wannier90_libs@
sd_wannier90_ok = @sd_wannier90_ok@
sd_wannier90_options = @sd_wannier90_options@
sd_wannier90_policy = @sd_wannier90_policy@
sd_wannier90_status = @sd_wannier90_status@
sd_xmlf90_cppflags = @sd_xmlf90_cppflags@
sd_xmlf90_enable = @sd_xmlf90_enable@
sd_xmlf90_enable_def = @sd_xmlf90_enable_def@
sd_xmlf90_fcflags = @sd_xmlf90_fcflags@
sd_xmlf90_init = @sd_xmlf90_init@
sd_xmlf90_ldflags = @sd_xmlf90_ldflags@
sd_xmlf90_libs = @sd_xmlf90_libs@
sd_xmlf90_ok = @sd_xmlf90_ok@
sd_xmlf90_options = @sd_xmlf90_options@
sd_xmlf90_policy = @sd_xmlf90_policy@
sd_xmlf90_status = @sd_xmlf90_status@
sharedstatedir = @sharedstatedir@
src_02_clib_fcflags = @src_02_clib_fcflags@
src_10_defs_fcflags = @src_10_defs_fcflags@
src_11_memory_mpi_fcflags = @src_11_memory_mpi_fcflags@
src_12_hide_mpi_fcflags = @src_12_hide_mpi_fcflags@
src_14_hidewrite_fcflags = @src_14_hidewrite_fcflags@
src_16_hideleave_fcflags = @src_16_hideleave_fcflags@
src_17_gpu_toolbox_fcflags = @src_17_gpu_toolbox_fcflags@
src_17_libtetra_ext_fcflags = @src_17_libtetra_ext_fcflags@
src_17_yaml_out_fcflags = @src_17_yaml_out_fcflags@
src_18_timing_fcflags = @src_18_timing_fcflags@
src_21_hashfuncs_fcflags = @src_21_hashfuncs_fcflags@
src_27_toolbox_oop_fcflags = @src_27_toolbox_oop_fcflags@
src_28_numeric_noabirule_fcflags = @src_28_numeric_noabirule_fcflags@
src_29_kpoints_fcflags = @src_29_kpoints_fcflags@
src_32_util_fcflags = @src_32_util_fcflags@
src_33_xc_lowlevel_fcflags = @src_33_xc_lowlevel_fcflags@
src_39_libpaw_fcflags = @src_39_libpaw_fcflags@
src_41_geometry_fcflags = @src_41_geometry_fcflags@
src_42_nlstrain_fcflags = @src_42_nlstrain_fcflags@
src_42_parser_fcflags = @src_42_parser_fcflags@
src_43_ptgroups_fcflags = @src_43_ptgroups_fcflags@
src_43_wvl_wrappers_fcflags = @src_43_wvl_wrappers_fcflags@
src_44_abitools_fcflags = @src_44_abitools_fcflags@
src_44_abitypes_defs_fcflags = @src_44_abitypes_defs_fcflags@
src_45_geomoptim_fcflags = @src_45_geomoptim_fcflags@
src_45_xgTools_fcflags = @src_45_xgTools_fcflags@
src_46_manage_cuda_fcflags = @src_46_manage_cuda_fcflags@
src_48_diago_fcflags = @src_48_diago_fcflags@
src_49_gw_toolbox_oop_fcflags = @src_49_gw_toolbox_oop_fcflags@
src_51_manage_mpi_fcflags = @src_51_manage_mpi_fcflags@
src_52_fft_mpi_noabirule_fcflags = @src_52_fft_mpi_noabirule_fcflags@
src_53_ffts_fcflags = @src_53_ffts_fcflags@
src_54_spacepar_fcflags = @src_54_spacepar_fcflags@
src_55_abiutil_fcflags = @src_55_abiutil_fcflags@
src_56_io_mpi_fcflags = @src_56_io_mpi_fcflags@
src_56_mixing_fcflags = @src_56_mixing_fcflags@
src_56_recipspace_fcflags = @src_56_recipspace_fcflags@
src_56_xc_fcflags = @src_56_xc_fcflags@
src_57_iopsp_parser_fcflags = @src_57_iopsp_parser_fcflags@
src_57_iovars_fcflags = @src_57_iovars_fcflags@
src_61_occeig_fcflags = @src_61_occeig_fcflags@
src_62_cg_noabirule_fcflags = @src_62_cg_noabirule_fcflags@
src_62_ctqmc_fcflags = @src_62_ctqmc_fcflags@
src_62_iowfdenpot_fcflags = @src_62_iowfdenpot_fcflags@
src_62_poisson_fcflags = @src_62_poisson_fcflags@
src_62_wvl_wfs_fcflags = @src_62_wvl_wfs_fcflags@
src_64_psp_fcflags = @src_64_psp_fcflags@
src_65_lotf_base_fcflags = @src_65_lotf_base_fcflags@
src_65_paw_fcflags = @src_65_paw_fcflags@
src_66_nonlocal_fcflags = @src_66_nonlocal_fcflags@
src_66_vdwxc_fcflags = @src_66_vdwxc_fcflags@
src_66_wfs_fcflags = @src_66_wfs_fcflags@
src_67_common_fcflags = @src_67_common_fcflags@
src_67_python_invocation_ext_fcflags = @src_67_python_invocation_ext_fcflags@
src_67_triqs_ext_fcflags = @src_67_triqs_ext_fcflags@
src_68_dmft_fcflags = @src_68_dmft_fcflags@
src_68_lotf_fcflags = @src_68_lotf_fcflags@
src_68_recursion_fcflags = @src_68_recursion_fcflags@
src_68_rsprc_fcflags = @src_68_rsprc_fcflags@
src_69_wfdesc_fcflags = @src_69_wfdesc_fcflags@
src_70_gw_fcflags = @src_70_gw_fcflags@
src_71_bse_fcflags = @src_71_bse_fcflags@
src_71_wannier_fcflags = @src_71_wannier_fcflags@
src_72_response_fcflags = @src_72_response_fcflags@
src_77_ddb_fcflags = @src_77_ddb_fcflags@
src_77_suscep_fcflags = @src_77_suscep_fcflags@
src_78_effpot_fcflags = @src_78_effpot_fcflags@
src_78_eph_fcflags = @src_78_eph_fcflags@
src_79_seqpar_mpi_fcflags = @src_79_seqpar_mpi_fcflags@
src_80_rttddft_fcflags = @src_80_rttddft_fcflags@
src_80_tdep_fcflags = @src_80_tdep_fcflags@
src_94_scfcv_fcflags = @src_94_scfcv_fcflags@
src_95_drive_fcflags = @src_95_drive_fcflags@
src_common_fcflags = @src_common_fcflags@
src_core_fcflags = @src_core_fcflags@
src_libpaw_fcflags = @src_libpaw_fcflags@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
with_abinit_common = @with_abinit_common@
with_bigdft = @with_bigdft@
with_config_file = @with_config_file@
with_debug_flavor = @with_debug_flavor@
with_fallbacks = @with_fallbacks@
with_fc_vendor = @with_fc_vendor@
with_fc_version = @with_fc_version@
with_fft_flavor = @with_fft_flavor@
with_fftw3 = @with_fftw3@
with_gnu_ld = @with_gnu_ld@
with_gpu = @with_gpu@
with_hdf5 = @with_hdf5@
with_levmar = @with_levmar@
with_libpaw = @with_libpaw@
with_libpsml = @with_libpsml@
with_libxc = @with_libxc@
with_libxml2 = @with_libxml2@
with_linalg_flavor = @with_linalg_flavor@
with_mpi = @with_mpi@
with_mpi_level = @with_mpi_level@
with_netcdf = @with_netcdf@
with_optim_flavor = @with_optim_flavor@
with_papi = @with_papi@
with_pfft = @with_pfft@
with_triqs = @with_triqs@
with_wannier90 = @with_wannier90@
with_xmlf90 = @with_xmlf90@
AM_CFLAGS = @ABI_CPPFLAGS@
AM_CXXFLAGS = $(sd_triqs_cxxflags)
AM_FCFLAGS = @FPPFLAGS@ @FCFLAGS_FREEFORM@ @FCFLAGS_MODDIR@ @fcflags_opt_78_effpot@ @sd_sys_fcflags@
AM_CPPFLAGS = \
	@src_10_defs_fcflags@ \
	@src_11_memory_mpi_fcflags@ \
	@src_12_hide_mpi_fcflags@ \
	@src_14_hidewrite_fcflags@ \
	@src_16_hideleave_fcflags@ \
	@src_27_toolbox_oop_fcflags@ \
	@src_28_numeric_noabirule_fcflags@ \
	@src_32_util_fcflags@ \
	@src_41_geometry_fcflags@ \
	@src_42_parser_fcflags@ \
	@src_44_abitools_fcflags@ \
	@src_44_abitypes_defs_fcflags@ \
	@src_45_geomoptim_fcflags@ \
	@src_56_recipspace_fcflags@ \
	@src_72_response_fcflags@ \
	@src_77_ddb_fcflags@ \
	@src_78_effpot_fcflags@ \
	@src_common_fcflags@ \
	@src_core_fcflags@ \
	@src_libpaw_fcflags@ \
	@sd_hdf5_cppflags@ \
	@sd_netcdf_cppflags@ \
	@sd_netcdf_fcflags@ \
	@sd_netcdf_fortran_cppflags@ \
	@sd_netcdf_fortran_fcflags@ \
	@abi_libxml2_cppflags@ \
	@fc_mod_fcflags@


# Regular source files
lib78_effpot_srcs = \
	m_compute_anharmonics.F90 \
	effpot_xml.c \
	m_generate_training_set.F90 \
	m_init10.F90 \
	m_abstract_mover.F90 \
	m_abstract_potential.F90 \
	m_anharmonics_terms.F90 \
	m_dynarray.F90 \
	m_effective_potential.F90 \
	m_effective_potential_file.F90 \
	m_effpot_mpi.F90 \
	m_fit_data.F90 \
	m_fit_polynomial_coeff.F90 \
	m_harmonics_terms.F90 \
	m_hashtable_strval.F90 \
	m_lattice_berendsen_NPT_mover.F90 \
	m_lattice_berendsen_NVT_mover.F90 \
	m_lattice_dummy_mover.F90 \
	m_lattice_effpot.F90 \
	m_lattice_harmonic_potential.F90 \
	m_lattice_io_netcdf.F90 \
	m_lattice_langevin_mover.F90 \
	m_lattice_lwf_map.F90 \
	m_lattice_lwf_mover.F90 \
	m_lattice_mover.F90 \
	m_lattice_ncfile.F90 \
	m_lattice_verlet_mover.F90 \
	m_linked_list.F90 \
	m_lwf_berendsen_mover.F90 \
	m_lwf_dummy_mover.F90 \
	m_lwf_hist.F90 \
	m_lwf_mc_mover.F90 \
	m_lwf_mover.F90 \
	m_lwf_ncfile.F90 \
	m_lwf_observables.F90 \
	m_lwf_primitive.F90 \
	m_lwf_potential.F90 \
	m_mathfuncs.F90 \
	m_mergesort.F90 \
	m_mpi_scheduler.F90 \
	m_multibinit_cell.F90 \
	m_multibinit_dataset.F90 \
	m_multibinit_io_xml.F90 \
	m_multibinit_main.F90 \
	m_multibinit_manager.F90 \
	m_multibinit_unittest.F90 \
	m_observables.F90 \
	m_opt_effpot.F90 \
	m_polynomial.F90 \
	m_polynomial_coeff.F90 \
	m_polynomial_conf.F90 \
	m_polynomial_potential.F90 \
	m_polynomial_term.F90 \
	m_scup_dataset.F90 \
	m_potential_list.F90 \
	m_primitive_potential.F90 \
	m_primitive_potential_list.F90 \
	m_spin_hist.F90 \
	m_spin_mc_mover.F90 \
	m_spin_mover.F90 \
	m_spin_ncfile.F90 \
	m_spin_observables.F90 \
	m_spin_potential.F90 \
	m_spin_primitive_potential.F90 \
	m_spin_reciprocal.F90 \
	m_slc_dynamics.F90 \
	m_slc_potential.F90 \
	m_slc_primitive_potential.F90 \
	m_spmat_base.F90 \
	m_spmat_convert.F90 \
	m_spmat_coo.F90 \
	m_spmat_csr.F90 \
	m_spmat_dense.F90 \
	m_spmat_lco.F90 \
	m_spmat_lil.F90 \
	m_spmat_spvec.F90 \
	m_spmat_NDCOO.F90 \
	m_supercell_maker.F90 \
	m_tightbinding.F90 \
	m_twobody_interaction.F90


# Source files depending on conditionals

# Library description
noinst_LIBRARIES = lib78_effpot.a
lib78_effpot_a_SOURCES = $(lib78_effpot_srcs)

# Dependencies (inside the directory) of directory 78_effpot
#
# This file has been generated by abisrc.py.
# DO NOT edit this file. All changes will be lost.
# Use `abisrc.py makemake` to regenerate the file.
CLEANFILES = m_compute_anharmonics_cpp.f90 effpot_xml_cpp.c \
	m_generate_training_set_cpp.f90 m_init10_cpp.f90 \
	m_abstract_mover_cpp.f90 m_abstract_potential_cpp.f90 \
	m_anharmonics_terms_cpp.f90 m_dynarray_cpp.f90 \
	m_effective_potential_cpp.f90 \
	m_effective_potential_file_cpp.f90 m_effpot_mpi_cpp.f90 \
	m_fit_data_cpp.f90 m_fit_polynomial_coeff_cpp.f90 \
	m_harmonics_terms_cpp.f90 m_hashtable_strval_cpp.f90 \
	m_lattice_berendsen_NPT_mover_cpp.f90 \
	m_lattice_berendsen_NVT_mover_cpp.f90 \
	m_lattice_dummy_mover_cpp.f90 m_lattice_effpot_cpp.f90 \
	m_lattice_harmonic_potential_cpp.f90 \
	m_lattice_io_netcdf_cpp.f90 m_lattice_langevin_mover_cpp.f90 \
	m_lattice_lwf_map_cpp.f90 m_lattice_lwf_mover_cpp.f90 \
	m_lattice_mover_cpp.f90 m_lattice_ncfile_cpp.f90 \
	m_lattice_verlet_mover_cpp.f90 m_linked_list_cpp.f90 \
	m_lwf_berendsen_mover_cpp.f90 m_lwf_dummy_mover_cpp.f90 \
	m_lwf_hist_cpp.f90 m_lwf_mc_mover_cpp.f90 m_lwf_mover_cpp.f90 \
	m_lwf_ncfile_cpp.f90 m_lwf_observables_cpp.f90 \
	m_lwf_primitive_cpp.f90 m_lwf_potential_cpp.f90 \
	m_mathfuncs_cpp.f90 m_mergesort_cpp.f90 \
	m_mpi_scheduler_cpp.f90 m_multibinit_cell_cpp.f90 \
	m_multibinit_dataset_cpp.f90 m_multibinit_io_xml_cpp.f90 \
	m_multibinit_main_cpp.f90 m_multibinit_manager_cpp.f90 \
	m_multibinit_unittest_cpp.f90 m_observables_cpp.f90 \
	m_opt_effpot_cpp.f90 m_polynomial_cpp.f90 \
	m_polynomial_coeff_cpp.f90 m_polynomial_conf_cpp.f90 \
	m_polynomial_potential_cpp.f90 m_polynomial_term_cpp.f90 \
	m_scup_dataset_cpp.f90 m_potential_list_cpp.f90 \
	m_primitive_potential_cpp.f90 \
	m_primitive_potential_list_cpp.f90 m_spin_hist_cpp.f90 \
	m_spin_mc_mover_cpp.f90 m_spin_mover_cpp.f90 \
	m_spin_ncfile_cpp.f90 m_spin_observables_cpp.f90 \
	m_spin_potential_cpp.f90 m_spin_primitive_potential_cpp.f90 \
	m_spin_reciprocal_cpp.f90 m_slc_dynamics_cpp.f90 \
	m_slc_potential_cpp.f90 m_slc_primitive_potential_cpp.f90 \
	m_spmat_base_cpp.f90 m_spmat_convert_cpp.f90 \
	m_spmat_coo_cpp.f90 m_spmat_csr_cpp.f90 m_spmat_dense_cpp.f90 \
	m_spmat_lco_cpp.f90 m_spmat_lil_cpp.f90 m_spmat_spvec_cpp.f90 \
	m_spmat_NDCOO_cpp.f90 m_supercell_maker_cpp.f90 \
	m_tightbinding_cpp.f90 m_twobody_interaction_cpp.f90 \
	m_abstract_mover.$(MODEXT) m_abstract_potential.$(MODEXT) \
	m_anharmonics_terms.$(MODEXT) m_compute_anharmonics.$(MODEXT) \
	m_dynarray.$(MODEXT) m_effective_potential.$(MODEXT) \
	m_effective_potential_file.$(MODEXT) m_effpot_mpi.$(MODEXT) \
	m_fit_data.$(MODEXT) m_fit_polynomial_coeff.$(MODEXT) \
	m_generate_training_set.$(MODEXT) m_harmonics_terms.$(MODEXT) \
	m_hashtable_strval.$(MODEXT) m_init10.$(MODEXT) \
	m_lattice_berendsen_NPT_mover.$(MODEXT) \
	m_lattice_berendsen_NVT_mover.$(MODEXT) \
	m_lattice_dummy_mover.$(MODEXT) m_lattice_effpot.$(MODEXT) \
	m_lattice_harmonic_potential.$(MODEXT) \
	m_lattice_io_netcdf.$(MODEXT) \
	m_lattice_langevin_mover.$(MODEXT) m_lattice_lwf_map.$(MODEXT) \
	m_lattice_lwf_mover.$(MODEXT) m_lattice_mover.$(MODEXT) \
	m_lattice_ncfile.$(MODEXT) m_lattice_verlet_mover.$(MODEXT) \
	m_linked_list.$(MODEXT) m_lwf_berendsen_mover.$(MODEXT) \
	m_lwf_dummy_mover.$(MODEXT) m_lwf_hist.$(MODEXT) \
	m_lwf_mc_mover.$(MODEXT) m_lwf_mover.$(MODEXT) \
	m_lwf_ncfile.$(MODEXT) m_lwf_observables.$(MODEXT) \
	m_lwf_potential.$(MODEXT) m_lwf_primitive.$(MODEXT) \
	m_mathfuncs.$(MODEXT) m_mergesort.$(MODEXT) \
	m_mpi_scheduler.$(MODEXT) m_multibinit_cell.$(MODEXT) \
	m_multibinit_dataset.$(MODEXT) m_multibinit_io_xml.$(MODEXT) \
	m_multibinit_main.$(MODEXT) m_multibinit_manager.$(MODEXT) \
	m_multibinit_unittest.$(MODEXT) m_observables.$(MODEXT) \
	m_opt_effpot.$(MODEXT) m_polynomial.$(MODEXT) \
	m_polynomial_coeff.$(MODEXT) m_polynomial_conf.$(MODEXT) \
	m_polynomial_potential.$(MODEXT) m_polynomial_term.$(MODEXT) \
	m_potential_list.$(MODEXT) m_primitive_potential.$(MODEXT) \
	m_primitive_potential_list.$(MODEXT) m_scup_dataset.$(MODEXT) \
	m_slc_dynamics.$(MODEXT) m_slc_potential.$(MODEXT) \
	m_slc_primitive_potential.$(MODEXT) m_spin_hist.$(MODEXT) \
	m_spin_mc_mover.$(MODEXT) m_spin_mover.$(MODEXT) \
	m_spin_ncfile.$(MODEXT) m_spin_observables.$(MODEXT) \
	m_spin_potential.$(MODEXT) \
	m_spin_primitive_potential.$(MODEXT) \
	m_spin_reciprocal.$(MODEXT) m_spmat_NDCOO.$(MODEXT) \
	m_spmat_base.$(MODEXT) m_spmat_convert.$(MODEXT) \
	m_spmat_coo.$(MODEXT) m_spmat_csr.$(MODEXT) \
	m_spmat_dense.$(MODEXT) m_spmat_lco.$(MODEXT) \
	m_spmat_lil.$(MODEXT) m_spmat_spvec.$(MODEXT) \
	m_supercell_maker.$(MODEXT) m_tightbinding.$(MODEXT) \
	m_twobody_interaction.$(MODEXT)
EXTRA_DIST = abinit.src abinit.dep _78_effpot_
all: all-am

.SUFFIXES:
.SUFFIXES: .F90 .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/78_effpot/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/78_effpot/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

lib78_effpot.a: $(lib78_effpot_a_OBJECTS) $(lib78_effpot_a_DEPENDENCIES) $(EXTRA_lib78_effpot_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f lib78_effpot.a
	$(AM_V_AR)$(lib78_effpot_a_AR) lib78_effpot.a $(lib78_effpot_a_OBJECTS) $(lib78_effpot_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib78_effpot.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/effpot_xml.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/effpot_xml.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/effpot_xml.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


m_abstract_mover.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_abstract_potential.$(OBJEXT): m_hashtable_strval.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_anharmonics_terms.$(OBJEXT): m_polynomial_coeff.$(OBJEXT) 

m_compute_anharmonics.$(OBJEXT): m_anharmonics_terms.$(OBJEXT) m_effective_potential.$(OBJEXT) m_effective_potential_file.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_dynarray.$(OBJEXT): m_mathfuncs.$(OBJEXT) m_mergesort.$(OBJEXT) 

m_effective_potential.$(OBJEXT): m_anharmonics_terms.$(OBJEXT) m_effpot_mpi.$(OBJEXT) m_harmonics_terms.$(OBJEXT) m_polynomial_coeff.$(OBJEXT) m_polynomial_conf.$(OBJEXT) 

m_effective_potential_file.$(OBJEXT): m_anharmonics_terms.$(OBJEXT) m_effective_potential.$(OBJEXT) m_harmonics_terms.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_polynomial_coeff.$(OBJEXT) m_polynomial_term.$(OBJEXT) 

m_fit_data.$(OBJEXT): m_effective_potential.$(OBJEXT) 

m_fit_polynomial_coeff.$(OBJEXT): m_effective_potential.$(OBJEXT) m_effective_potential_file.$(OBJEXT) m_fit_data.$(OBJEXT) m_polynomial_coeff.$(OBJEXT) m_scup_dataset.$(OBJEXT) 

m_init10.$(OBJEXT): m_multibinit_dataset.$(OBJEXT) 

m_lattice_berendsen_NPT_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_berendsen_NVT_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_dummy_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_effpot.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_harmonic_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_spmat_coo.$(OBJEXT) 

m_lattice_io_netcdf.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_dynarray.$(OBJEXT) m_lattice_harmonic_potential.$(OBJEXT) m_mathfuncs.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_primitive_potential.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_spmat_convert.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_lattice_langevin_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_lwf_map.$(OBJEXT): m_spmat_coo.$(OBJEXT) 

m_lattice_lwf_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_lwf_mover.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) 

m_lattice_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_ncfile.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_ncfile.$(OBJEXT): m_lattice_harmonic_potential.$(OBJEXT) m_lattice_io_netcdf.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lattice_verlet_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lwf_berendsen_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lwf_hist.$(OBJEXT) m_lwf_mover.$(OBJEXT) m_lwf_ncfile.$(OBJEXT) m_lwf_observables.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lwf_dummy_mover.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lwf_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lwf_hist.$(OBJEXT): m_lwf_observables.$(OBJEXT) 

m_lwf_mc_mover.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lwf_mover.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lwf_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lwf_hist.$(OBJEXT) m_lwf_ncfile.$(OBJEXT) m_lwf_observables.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lwf_ncfile.$(OBJEXT): m_lwf_hist.$(OBJEXT) m_lwf_observables.$(OBJEXT) m_lwf_potential.$(OBJEXT) m_lwf_primitive.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_lwf_observables.$(OBJEXT): m_observables.$(OBJEXT) 

m_lwf_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_lwf_map.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_spmat_convert.$(OBJEXT) m_spmat_coo.$(OBJEXT) m_spmat_csr.$(OBJEXT) m_spmat_spvec.$(OBJEXT) m_twobody_interaction.$(OBJEXT) 

m_lwf_primitive.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_dynarray.$(OBJEXT) m_lwf_potential.$(OBJEXT) m_mathfuncs.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_primitive_potential.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_spmat_convert.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_mergesort.$(OBJEXT): m_mathfuncs.$(OBJEXT) 

m_multibinit_cell.$(OBJEXT): m_lattice_lwf_map.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spmat_spvec.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_multibinit_dataset.$(OBJEXT): m_scup_dataset.$(OBJEXT) 

m_multibinit_io_xml.$(OBJEXT): m_mathfuncs.$(OBJEXT) 

m_multibinit_main.$(OBJEXT): m_multibinit_manager.$(OBJEXT) 

m_multibinit_manager.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_effective_potential.$(OBJEXT) m_effective_potential_file.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_init10.$(OBJEXT) m_lattice_berendsen_NPT_mover.$(OBJEXT) m_lattice_berendsen_NVT_mover.$(OBJEXT) m_lattice_dummy_mover.$(OBJEXT) m_lattice_effpot.$(OBJEXT) m_lattice_harmonic_potential.$(OBJEXT) m_lattice_io_netcdf.$(OBJEXT) m_lattice_langevin_mover.$(OBJEXT) m_lattice_lwf_mover.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_lattice_verlet_mover.$(OBJEXT) m_lwf_berendsen_mover.$(OBJEXT) m_lwf_dummy_mover.$(OBJEXT) m_lwf_mc_mover.$(OBJEXT) m_lwf_mover.$(OBJEXT) m_lwf_potential.$(OBJEXT) m_lwf_primitive.$(OBJEXT) m_mathfuncs.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_potential_list.$(OBJEXT) m_primitive_potential.$(OBJEXT) m_primitive_potential_list.$(OBJEXT) m_slc_dynamics.$(OBJEXT) m_slc_potential.$(OBJEXT) m_slc_primitive_potential.$(OBJEXT) m_spin_mover.$(OBJEXT) m_spin_ncfile.$(OBJEXT) m_spin_potential.$(OBJEXT) m_spin_primitive_potential.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_multibinit_unittest.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_dynarray.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_spmat_convert.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_opt_effpot.$(OBJEXT): m_effective_potential.$(OBJEXT) m_effective_potential_file.$(OBJEXT) m_fit_data.$(OBJEXT) m_fit_polynomial_coeff.$(OBJEXT) m_polynomial_coeff.$(OBJEXT) m_polynomial_term.$(OBJEXT) 

m_polynomial_coeff.$(OBJEXT): m_polynomial_term.$(OBJEXT) 

m_polynomial_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_mathfuncs.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_potential_list.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) 

m_primitive_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_potential_list.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_primitive_potential_list.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_potential_list.$(OBJEXT) m_primitive_potential.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_slc_dynamics.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_lattice_mover.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_slc_potential.$(OBJEXT) m_spin_mover.$(OBJEXT) 

m_slc_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) 

m_slc_primitive_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_dynarray.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_primitive_potential.$(OBJEXT) m_slc_potential.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_spin_mc_mover.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) 

m_spin_mover.$(OBJEXT): m_abstract_mover.$(OBJEXT) m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_mathfuncs.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spin_hist.$(OBJEXT) m_spin_mc_mover.$(OBJEXT) m_spin_ncfile.$(OBJEXT) m_spin_observables.$(OBJEXT) m_spin_potential.$(OBJEXT) 

m_spin_ncfile.$(OBJEXT): m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spin_hist.$(OBJEXT) m_spin_observables.$(OBJEXT) m_spin_potential.$(OBJEXT) m_spin_primitive_potential.$(OBJEXT) 

m_spin_observables.$(OBJEXT): m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spin_potential.$(OBJEXT) 

m_spin_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_hashtable_strval.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_spmat_convert.$(OBJEXT) m_spmat_coo.$(OBJEXT) m_spmat_csr.$(OBJEXT) m_spmat_lil.$(OBJEXT) 

m_spin_primitive_potential.$(OBJEXT): m_abstract_potential.$(OBJEXT) m_dynarray.$(OBJEXT) m_mathfuncs.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) m_multibinit_cell.$(OBJEXT) m_multibinit_dataset.$(OBJEXT) m_multibinit_io_xml.$(OBJEXT) m_primitive_potential.$(OBJEXT) m_spin_potential.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) m_supercell_maker.$(OBJEXT) 

m_spmat_NDCOO.$(OBJEXT): m_dynarray.$(OBJEXT) m_spmat_base.$(OBJEXT) 

m_spmat_convert.$(OBJEXT): m_linked_list.$(OBJEXT) m_spmat_coo.$(OBJEXT) m_spmat_csr.$(OBJEXT) m_spmat_dense.$(OBJEXT) m_spmat_lco.$(OBJEXT) m_spmat_lil.$(OBJEXT) 

m_spmat_coo.$(OBJEXT): m_spmat_NDCOO.$(OBJEXT) m_spmat_base.$(OBJEXT) 

m_spmat_csr.$(OBJEXT): m_mpi_scheduler.$(OBJEXT) m_spmat_base.$(OBJEXT) 

m_spmat_dense.$(OBJEXT): m_spmat_base.$(OBJEXT) 

m_spmat_lco.$(OBJEXT): m_dynarray.$(OBJEXT) m_spmat_base.$(OBJEXT) 

m_spmat_lil.$(OBJEXT): m_linked_list.$(OBJEXT) m_spmat_base.$(OBJEXT) 

m_spmat_spvec.$(OBJEXT): m_dynarray.$(OBJEXT) 

m_supercell_maker.$(OBJEXT): m_mathfuncs.$(OBJEXT) m_mpi_scheduler.$(OBJEXT) 

m_tightbinding.$(OBJEXT): m_multibinit_dataset.$(OBJEXT) 

m_twobody_interaction.$(OBJEXT): m_dynarray.$(OBJEXT) m_spmat_NDCOO.$(OBJEXT) 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
